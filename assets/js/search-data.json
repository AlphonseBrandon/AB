{
  
    
        "post0": {
            "title": "Analyzing International Debt Statistics",
            "content": "Background . Foreign debt, also known as external debt, has been rising steadily in recent decades, with unwelcome side-effects in some borrowing countries. These include slower economic growth, particularly in low-income countries, as well as crippling debt crises, financial market turmoil, and even secondary effects such as a rise in human-rights abuses. . Goal . In this notebook, we are going to analyze international debt data collected by The World Bank. The dataset contains information about the amount of debt (in USD) owed by developing countries across several categories. We are going to find the answers to questions like: . &lt;/p&gt; What is the total amount of debt that is owed by the countries listed in the dataset? | . Which country owns the maximum amount of debt and what does that amount look like? | . What is the average amount of debt owed by countries across different debt indicators? | . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; I will be using MySQL database for this project and using a dataset gotten from the World Bank . Let&#39;s start by importing the necessary packages . import mysql.connector import sqlalchemy import pandas . Now let&#39;s make a connection to the database . sqlalchemy.create_engine(&quot;mysql://root:@127.0.0.1&quot;) . Engine(mysql://root:***@127.0.0.1) . . Loading the sql magic extension to use sql directly in jupyter notebook . %load_ext sql . Connecting to my database table . %sql mysql://root:@localhost/debt_statistics . %%sql SELECT * FROM international_debt LIMIT 5 . * mysql://root:***@localhost/debt_statistics 5 rows affected. . country_name country_code indicator_name indicator_code debt . Afghanistan | AFG | Disbursements on external debt, long-term (DIS, current US$) | DT.DIS.DLXF.CD | 72894453.700000003 | . Afghanistan | AFG | Interest payments on external debt, long-term (INT, current US$) | DT.INT.DLXF.CD | 53239440.100000001 | . Afghanistan | AFG | PPG, bilateral (AMT, current US$) | DT.AMT.BLAT.CD | 61739336.899999999 | . Afghanistan | AFG | PPG, bilateral (DIS, current US$) | DT.DIS.BLAT.CD | 49114729.399999999 | . Afghanistan | AFG | PPG, bilateral (INT, current US$) | DT.INT.BLAT.CD | 39903620.100000001 | . 2. Let&#39;s get to know the number of distint countries present in our dataset . From our dataet there is repetition in the country name accross several rows as the country is most likely to have debt in more than on debt indicators . To helt us filter this, let&#39;s use the count distinc sql function to extract unique countries present in the database . %%sql SELECT COUNT(DISTINCT country_name) AS total_distinct_countries FROM international_debt . * mysql://root:***@localhost/debt_statistics 1 rows affected. . total_distinct_countries . 124 | . As seen from our query above, there are 124 countries contained in this dataset . 3. Now Let&#39;s find the number of distinct debt indicators . From our table, there is a column name called indicator name that highlights the purpose of taking debt. . There is also a column close to it called indicator_code which symbolizes the cathegory of the debt . This will help us find out about the areas where countries are amostly indebted in. . %%sql SELECT DISTINCT indicator_code AS distinct_debt_indicators FROM international_debt ORDER BY distinct_debt_indicators LIMIT 5 . * mysql://root:***@localhost/debt_statistics 5 rows affected. . distinct_debt_indicators . DT.AMT.BLAT.CD | . DT.AMT.DLXF.CD | . DT.AMT.DPNG.CD | . DT.AMT.MLAT.CD | . DT.AMT.OFFT.CD | . 4. Summing the amount of debt owed by all countries . This will give us a glims of how the economy of the world is doing, so let&#39;s find the total debt owed by counties in USD . %%sql SELECT ROUND(SUM(debt) / 1000000, 2) AS total_debt FROM international_debt; . * mysql://root:***@localhost/debt_statistics 1 rows affected. . total_debt . 3079734.49 | . 5. Let&#39;s find the country with the highest debt . Now that we have the exact total of the amounts of debt owed by several countries, let&#39;s now find out the country that owns the highest amount of debt along with the amount. . Note that this debt is the sum of different debts owed by a country across several categories. . This will help to understand more about the country in terms of its socio-economic scenarios. . %%sql SELECT country_name, SUM(debt) AS total_debt FROM international_debt GROUP BY country_name ORDER BY total_debt DESC LIMIT 3 . * mysql://root:***@localhost/debt_statistics 3 rows affected. . country_name total_debt . China | 285793494734.200001568 | . Brazil | 280623966140.800007581 | . South Asia | 247608723990.600003211 | . 6. Average amount of debt across indicators . We can dig even further to find out on an average how much debt a country owes? This will give us a better sense of the distribution of the amount of debt across different indicators. . %%sql SELECT country_name, indicator_code AS debt_indicator, indicator_name, AVG(debt) AS average_debt FROM international_debt GROUP BY debt_indicator, indicator_name ORDER BY average_debt DESC LIMIT 5; . * mysql://root:***@localhost/debt_statistics 5 rows affected. . country_name debt_indicator indicator_name average_debt . Afghanistan | DT.AMT.DLXF.CD | Principal repayments on external debt, long-term (AMT, current US$) | 5904868401.4991936117097 | . Albania | DT.AMT.DPNG.CD | Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$) | 5161194333.8126583489367 | . Afghanistan | DT.DIS.DLXF.CD | Disbursements on external debt, long-term (DIS, current US$) | 2152041216.8902438883577 | . Afghanistan | DT.DIS.OFFT.CD | PPG, official creditors (DIS, current US$) | 1958983452.8598360455328 | . Albania | DT.AMT.PRVT.CD | PPG, private creditors (AMT, current US$) | 1803694101.9632653206939 | . 7. The highest amount of principal payment . We can see that the indicator DT.AMT.DLXF.CD tops the chart of average debt. This category includes repayment of long term debts. Countries take on long-term debt to acquire immediate capital . More information about this category can be found here. . An interesting observation in the above finding is that there is a huge difference in the amounts of the indicators after the second one. This indicates that the first two indicators might be the most severe categories in which the countries owe their debts. . We can investigate this a bit more so as to find out which country owes the highest amount of debt in the category of long term debts (DT.AMT.DLXF.CD). Since not all the countries suffer from the same kind of economic disturbances, this finding will allow us to understand that particular country&#39;s economic condition a bit more specifically. . %%sql SELECT country_name, indicator_name FROM international_debt WHERE debt = (SELECT MAX(debt) FROM international_debt WHERE indicator_code = &#39;DT.AMT.DLXF.CD&#39;); . * mysql://root:***@localhost/debt_statistics 1 rows affected. . country_name indicator_name . China | Principal repayments on external debt, long-term (AMT, current US$) | . 8. The most common debt indicator . We saw that long-term debt is the topmost category when it comes to the average amount of debt. . But is it the most common indicator in which the countries owe their debt? Let&#39;s find that out. . %%sql SELECT indicator_code, COUNT(indicator_code) AS indicator_count FROM international_debt GROUP BY indicator_code ORDER BY indicator_count DESC, indicator_code DESC LIMIT 10 . * mysql://root:***@localhost/debt_statistics 10 rows affected. . indicator_code indicator_count . DT.INT.OFFT.CD | 124 | . DT.INT.MLAT.CD | 124 | . DT.INT.DLXF.CD | 124 | . DT.AMT.OFFT.CD | 124 | . DT.AMT.MLAT.CD | 124 | . DT.AMT.DLXF.CD | 124 | . DT.DIS.DLXF.CD | 123 | . DT.INT.BLAT.CD | 122 | . DT.DIS.OFFT.CD | 122 | . DT.AMT.BLAT.CD | 122 | . 9. Other viable debt issues . There are a total of six debt indicators in which all the countries listed in our dataset have taken debt. The indicator DT.AMT.DLXF.CD is also there in the list. So, this gives us a clue that all these countries are suffering from a common economic issue. But that is not the end of the story, but just a part of the story. . Let&#39;s change tracks from debt_indicators now and focus on the amount of debt again. Let&#39;s find out the maximum amount of debt that each country has. With this, we will be in a position to identify the other plausible economic issues a country might be going through. . %%sql SELECT country_name, MAX(debt) AS maximum_debt FROM international_debt GROUP BY country_name ORDER BY maximum_debt DESC LIMIT 10 . * mysql://root:***@localhost/debt_statistics 10 rows affected. . country_name maximum_debt . China | 96218620835.699996948 | . Brazil | 90041840304.100006104 | . Russian Federation | 66589761833.500000000 | . Turkey | 51555031005.800003052 | . South Asia | 48756295898.199996948 | . Least developed countries: UN classification | 40160766261.599998474 | . IDA only | 34531188113.199996948 | . India | 31923507000.799999237 | . Indonesia | 30916112653.799999237 | . Kazakhstan | 27482093686.400001526 | . Let&#39;s visualize this results with a bar chart using python&#39;s matplotlib library . import matplotlib.pyplot as plt plt.figure(figsize=(18, 7)) chart = %sql SELECT country_name, MAX(debt) AS max_debt FROM international_debt GROUP BY country_name ORDER BY max_debt DESC LIMIT 10 chart.bar(); . * mysql://root:***@localhost/debt_statistics 10 rows affected. . 10. Conclusion . In this notebook, we took a look at debt owed by countries across the globe. We extracted a few summary statistics from the data and unraveled some interesting facts and figures. . &lt;/div&gt; .",
            "url": "https://alphonsebrandon.github.io/AB/sql/data%20visualization/data%20mining/python/2022/05/19/_05_20_international_debt_analysis_with_sql.html",
            "relUrl": "/sql/data%20visualization/data%20mining/python/2022/05/19/_05_20_international_debt_analysis_with_sql.html",
            "date": " • May 19, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Analyzing International Debt Statistics",
            "content": "Background . Foreign debt, also known as external debt, has been rising steadily in recent decades, with unwelcome side-effects in some borrowing countries. These include slower economic growth, particularly in low-income countries, as well as crippling debt crises, financial market turmoil, and even secondary effects such as a rise in human-rights abuses. . Goal . In this notebook, we are going to analyze international debt data collected by The World Bank. The dataset contains information about the amount of debt (in USD) owed by developing countries across several categories. We are going to find the answers to questions like: . &lt;/p&gt; What is the total amount of debt that is owed by the countries listed in the dataset? | . Which country owns the maximum amount of debt and what does that amount look like? | . What is the average amount of debt owed by countries across different debt indicators? | . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; I will be using MySQL database for this project and using a dataset gotten from the World Bank . Let&#39;s start by importing the necessary packages . import mysql.connector import sqlalchemy import pandas . Now let&#39;s make a connection to the database . sqlalchemy.create_engine(&quot;mysql://root:@127.0.0.1&quot;) . Engine(mysql://root:***@127.0.0.1) . . Loading the sql magic extension to use sql directly in jupyter notebook . %load_ext sql . Connecting to my database table . %sql mysql://root:@localhost/debt_statistics . %%sql SELECT * FROM international_debt LIMIT 5 . * mysql://root:***@localhost/debt_statistics 5 rows affected. . country_name country_code indicator_name indicator_code debt . Afghanistan | AFG | Disbursements on external debt, long-term (DIS, current US$) | DT.DIS.DLXF.CD | 72894453.700000003 | . Afghanistan | AFG | Interest payments on external debt, long-term (INT, current US$) | DT.INT.DLXF.CD | 53239440.100000001 | . Afghanistan | AFG | PPG, bilateral (AMT, current US$) | DT.AMT.BLAT.CD | 61739336.899999999 | . Afghanistan | AFG | PPG, bilateral (DIS, current US$) | DT.DIS.BLAT.CD | 49114729.399999999 | . Afghanistan | AFG | PPG, bilateral (INT, current US$) | DT.INT.BLAT.CD | 39903620.100000001 | . 2. Let&#39;s get to know the number of distint countries present in our dataset . From our dataet there is repetition in the country name accross several rows as the country is most likely to have debt in more than on debt indicators . To helt us filter this, let&#39;s use the count distinc sql function to extract unique countries present in the database . %%sql SELECT COUNT(DISTINCT country_name) AS total_distinct_countries FROM international_debt . * mysql://root:***@localhost/debt_statistics 1 rows affected. . total_distinct_countries . 124 | . As seen from our query above, there are 124 countries contained in this dataset . 3. Now Let&#39;s find the number of distinct debt indicators . From our table, there is a column name called indicator name that highlights the purpose of taking debt. . There is also a column close to it called indicator_code which symbolizes the cathegory of the debt . This will help us find out about the areas where countries are amostly indebted in. . %%sql SELECT DISTINCT indicator_code AS distinct_debt_indicators FROM international_debt ORDER BY distinct_debt_indicators LIMIT 5 . * mysql://root:***@localhost/debt_statistics 5 rows affected. . distinct_debt_indicators . DT.AMT.BLAT.CD | . DT.AMT.DLXF.CD | . DT.AMT.DPNG.CD | . DT.AMT.MLAT.CD | . DT.AMT.OFFT.CD | . 4. Summing the amount of debt owed by all countries . This will give us a glims of how the economy of the world is doing, so let&#39;s find the total debt owed by counties in USD . %%sql SELECT ROUND(SUM(debt) / 1000000, 2) AS total_debt FROM international_debt; . * mysql://root:***@localhost/debt_statistics 1 rows affected. . total_debt . 3079734.49 | . 5. Let&#39;s find the country with the highest debt . Now that we have the exact total of the amounts of debt owed by several countries, let&#39;s now find out the country that owns the highest amount of debt along with the amount. . Note that this debt is the sum of different debts owed by a country across several categories. . This will help to understand more about the country in terms of its socio-economic scenarios. . %%sql SELECT country_name, SUM(debt) AS total_debt FROM international_debt GROUP BY country_name ORDER BY total_debt DESC LIMIT 3 . * mysql://root:***@localhost/debt_statistics 3 rows affected. . country_name total_debt . China | 285793494734.200001568 | . Brazil | 280623966140.800007581 | . South Asia | 247608723990.600003211 | . 6. Average amount of debt across indicators . We can dig even further to find out on an average how much debt a country owes? This will give us a better sense of the distribution of the amount of debt across different indicators. . %%sql SELECT country_name, indicator_code AS debt_indicator, indicator_name, AVG(debt) AS average_debt FROM international_debt GROUP BY debt_indicator, indicator_name ORDER BY average_debt DESC LIMIT 5; . * mysql://root:***@localhost/debt_statistics 5 rows affected. . country_name debt_indicator indicator_name average_debt . Afghanistan | DT.AMT.DLXF.CD | Principal repayments on external debt, long-term (AMT, current US$) | 5904868401.4991936117097 | . Albania | DT.AMT.DPNG.CD | Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$) | 5161194333.8126583489367 | . Afghanistan | DT.DIS.DLXF.CD | Disbursements on external debt, long-term (DIS, current US$) | 2152041216.8902438883577 | . Afghanistan | DT.DIS.OFFT.CD | PPG, official creditors (DIS, current US$) | 1958983452.8598360455328 | . Albania | DT.AMT.PRVT.CD | PPG, private creditors (AMT, current US$) | 1803694101.9632653206939 | . 7. The highest amount of principal payment . We can see that the indicator DT.AMT.DLXF.CD tops the chart of average debt. This category includes repayment of long term debts. Countries take on long-term debt to acquire immediate capital . More information about this category can be found here. . An interesting observation in the above finding is that there is a huge difference in the amounts of the indicators after the second one. This indicates that the first two indicators might be the most severe categories in which the countries owe their debts. . We can investigate this a bit more so as to find out which country owes the highest amount of debt in the category of long term debts (DT.AMT.DLXF.CD). Since not all the countries suffer from the same kind of economic disturbances, this finding will allow us to understand that particular country&#39;s economic condition a bit more specifically. . %%sql SELECT country_name, indicator_name FROM international_debt WHERE debt = (SELECT MAX(debt) FROM international_debt WHERE indicator_code = &#39;DT.AMT.DLXF.CD&#39;); . * mysql://root:***@localhost/debt_statistics 1 rows affected. . country_name indicator_name . China | Principal repayments on external debt, long-term (AMT, current US$) | . 8. The most common debt indicator . We saw that long-term debt is the topmost category when it comes to the average amount of debt. . But is it the most common indicator in which the countries owe their debt? Let&#39;s find that out. . %%sql SELECT indicator_code, COUNT(indicator_code) AS indicator_count FROM international_debt GROUP BY indicator_code ORDER BY indicator_count DESC, indicator_code DESC LIMIT 10 . * mysql://root:***@localhost/debt_statistics 10 rows affected. . indicator_code indicator_count . DT.INT.OFFT.CD | 124 | . DT.INT.MLAT.CD | 124 | . DT.INT.DLXF.CD | 124 | . DT.AMT.OFFT.CD | 124 | . DT.AMT.MLAT.CD | 124 | . DT.AMT.DLXF.CD | 124 | . DT.DIS.DLXF.CD | 123 | . DT.INT.BLAT.CD | 122 | . DT.DIS.OFFT.CD | 122 | . DT.AMT.BLAT.CD | 122 | . 9. Other viable debt issues . There are a total of six debt indicators in which all the countries listed in our dataset have taken debt. The indicator DT.AMT.DLXF.CD is also there in the list. So, this gives us a clue that all these countries are suffering from a common economic issue. But that is not the end of the story, but just a part of the story. . Let&#39;s change tracks from debt_indicators now and focus on the amount of debt again. Let&#39;s find out the maximum amount of debt that each country has. With this, we will be in a position to identify the other plausible economic issues a country might be going through. . %%sql SELECT country_name, MAX(debt) AS maximum_debt FROM international_debt GROUP BY country_name ORDER BY maximum_debt DESC LIMIT 10 . * mysql://root:***@localhost/debt_statistics 10 rows affected. . country_name maximum_debt . China | 96218620835.699996948 | . Brazil | 90041840304.100006104 | . Russian Federation | 66589761833.500000000 | . Turkey | 51555031005.800003052 | . South Asia | 48756295898.199996948 | . Least developed countries: UN classification | 40160766261.599998474 | . IDA only | 34531188113.199996948 | . India | 31923507000.799999237 | . Indonesia | 30916112653.799999237 | . Kazakhstan | 27482093686.400001526 | . Let&#39;s visualize this results with a bar chart using python&#39;s matplotlib library . import matplotlib.pyplot as plt plt.figure(figsize=(18, 7)) chart = %sql SELECT country_name, MAX(debt) AS max_debt FROM international_debt GROUP BY country_name ORDER BY max_debt DESC LIMIT 10 chart.bar(); . * mysql://root:***@localhost/debt_statistics 10 rows affected. . 10. Conclusion . In this notebook, we took a look at debt owed by countries across the globe. We extracted a few summary statistics from the data and unraveled some interesting facts and figures. . &lt;/div&gt; .",
            "url": "https://alphonsebrandon.github.io/AB/sql/data%20visualization/data%20mining/python/2022/05/19/_05_20_international_debt_analysis.html",
            "relUrl": "/sql/data%20visualization/data%20mining/python/2022/05/19/_05_20_international_debt_analysis.html",
            "date": " • May 19, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Analyzing Text About Data Science",
            "content": "Goal . Finding concepts relevant to the field of data science by doing some text mining. Le&#39;s get started! . Link to the article . url = &#39;https://en.wikipedia.org/wiki/Data_science&#39; . Getting the data . I will be using the request library for this and printing out the first 1000 words found in this article . import requests text = requests.get(url).content.decode(&#39;utf-8&#39;) print(text[:1000]) . &lt;!DOCTYPE html&gt; &lt;html class=&#34;client-nojs&#34; lang=&#34;en&#34; dir=&#34;ltr&#34;&gt; &lt;head&gt; &lt;meta charset=&#34;UTF-8&#34;/&gt; &lt;title&gt;Data science - Wikipedia&lt;/title&gt; &lt;script&gt;document.documentElement.className=&#34;client-js&#34;;RLCONF={&#34;wgBreakFrames&#34;:false,&#34;wgSeparatorTransformTable&#34;:[&#34;&#34;,&#34;&#34;],&#34;wgDigitTransformTable&#34;:[&#34;&#34;,&#34;&#34;],&#34;wgDefaultDateFormat&#34;:&#34;dmy&#34;,&#34;wgMonthNames&#34;:[&#34;&#34;,&#34;January&#34;,&#34;February&#34;,&#34;March&#34;,&#34;April&#34;,&#34;May&#34;,&#34;June&#34;,&#34;July&#34;,&#34;August&#34;,&#34;September&#34;,&#34;October&#34;,&#34;November&#34;,&#34;December&#34;],&#34;wgRequestId&#34;:&#34;10b8cb21-bcbf-44e4-861c-d3dd8fa56eb0&#34;,&#34;wgCSPNonce&#34;:false,&#34;wgCanonicalNamespace&#34;:&#34;&#34;,&#34;wgCanonicalSpecialPageName&#34;:false,&#34;wgNamespaceNumber&#34;:0,&#34;wgPageName&#34;:&#34;Data_science&#34;,&#34;wgTitle&#34;:&#34;Data science&#34;,&#34;wgCurRevisionId&#34;:1083880658,&#34;wgRevisionId&#34;:1083880658,&#34;wgArticleId&#34;:35458904,&#34;wgIsArticle&#34;:true,&#34;wgIsRedirect&#34;:false,&#34;wgAction&#34;:&#34;view&#34;,&#34;wgUserName&#34;:null,&#34;wgUserGroups&#34;:[&#34;*&#34;],&#34;wgCategories&#34;:[&#34;Articles with short description&#34;,&#34;Short description matches Wikidata&#34;,&#34;Use dmy dates from August 2021&#34;,&#34;Information science&#34;,&#34;Computer occupations&#34;,&#34;Comput . . Transforming the data . Since the format of the text downloaded above is html . I need to change it to text which is suitable for processing by using the HTMLparser object from python . Next i have to define the text that will be collected inside the HTML tags . from html.parser import HTMLParser class MyHTMLParser(HTMLParser): script = False res = &quot;&quot; def handle_starttag(self, tag, attrs): if tag.lower() in [&quot;script&quot;, &quot;style&quot;]: self.script = True def handle_endtag(self, tag): if tag.lower() in [&quot;script&quot;, &quot;style&quot;]: self.script = False def handle_data(self, data): if str.strip(data)==&quot;&quot; or self.script: return self.res += &#39; &#39;+data.replace(&#39;[ edit]&#39;,&#39;&#39;) parser = MyHTMLParser() parser.feed(text) text = parser.res print(text[:1000]) . Data science - Wikipedia Data science From Wikipedia, the free encyclopedia Jump to navigation Jump to search Interdisciplinary field of study focused on deriving knowledge and insights from data Not to be confused with information science . The existence of Comet NEOWISE (here depicted as a series of red dots) was discovered by analyzing astronomical survey data acquired by a space telescope , the Wide-field Infrared Survey Explorer . Part of a series on Machine learning and data mining Problems Classification Clustering Regression Anomaly detection Data Cleaning AutoML Association rules Reinforcement learning Structured prediction Feature engineering Feature learning Online learning Semi-supervised learning Unsupervised learning Learning to rank Grammar induction Supervised learning ( classification  • regression ) Decision trees Ensembles Bagging Boosting Random forest k -NN Linear regression Naive Bayes Artificial neural networks Logistic regression Perceptron Relevance v . . Getting insights . I will uncover the insights from the processed data by extracting keywords from the text and see which of them are more meaningful . The python library &quot;Rake can help in doing this . I will set the minimum length of a word to 5 characters, minimum frequency of a keyword in my data to 3 and maximum number of words in a keyword to 2 . import sys !{sys.executable} -m pip install nlp_rake !{sys.executable} -m pip install matplotlib . Collecting nlp_rake Downloading nlp_rake-0.0.2-py3-none-any.whl (30 kB) Requirement already satisfied: regex&gt;=2018.6.6 in /usr/local/lib/python3.7/dist-packages (from nlp_rake) (2019.12.20) Collecting langdetect&gt;=1.0.8 Downloading langdetect-1.0.9.tar.gz (981 kB) |████████████████████████████████| 981 kB 8.1 MB/s Requirement already satisfied: pyrsistent&gt;=0.14.2 in /usr/local/lib/python3.7/dist-packages (from nlp_rake) (0.18.1) Requirement already satisfied: numpy&gt;=1.14.4 in /usr/local/lib/python3.7/dist-packages (from nlp_rake) (1.21.6) Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from langdetect&gt;=1.0.8-&gt;nlp_rake) (1.15.0) Building wheels for collected packages: langdetect Building wheel for langdetect (setup.py) ... done Created wheel for langdetect: filename=langdetect-1.0.9-py3-none-any.whl size=993242 sha256=df487c66f035a07626eae4879b40c1d822a56eb230691d0d8f777f848e6d7fcb Stored in directory: /root/.cache/pip/wheels/c5/96/8a/f90c59ed25d75e50a8c10a1b1c2d4c402e4dacfa87f3aff36a Successfully built langdetect Installing collected packages: langdetect, nlp-rake Successfully installed langdetect-1.0.9 nlp-rake-0.0.2 Requirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (3.2.2) Requirement already satisfied: cycler&gt;=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib) (0.11.0) Requirement already satisfied: numpy&gt;=1.11 in /usr/local/lib/python3.7/dist-packages (from matplotlib) (1.21.6) Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,&gt;=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib) (3.0.8) Requirement already satisfied: python-dateutil&gt;=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib) (2.8.2) Requirement already satisfied: kiwisolver&gt;=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib) (1.4.2) Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from kiwisolver&gt;=1.0.1-&gt;matplotlib) (4.1.1) Requirement already satisfied: six&gt;=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil&gt;=2.1-&gt;matplotlib) (1.15.0) . . import nlp_rake extractor = nlp_rake.Rake(max_words=2,min_freq=3,min_chars=5) res = extractor.apply(text) res . [(&#39;machine learning&#39;, 4.0), (&#39;big data&#39;, 4.0), (&#39;data scientist&#39;, 4.0), (&#39;21st century&#39;, 4.0), (&#39;data science&#39;, 3.912280701754386), (&#39;computer science&#39;, 3.912280701754386), (&#39;information science&#39;, 3.8011695906432745), (&#39;data analysis&#39;, 3.7142857142857144), (&#39;application domains&#39;, 3.6), (&#39;science&#39;, 1.912280701754386), (&#39;field&#39;, 1.25), (&#39;classification&#39;, 1.25), (&#39;statistics&#39;, 1.2272727272727273), (&#39;techniques&#39;, 1.2), (&#39;datasets&#39;, 1.0), (&#39;education&#39;, 1.0), (&#39;archived&#39;, 1.0), (&#39;original&#39;, 1.0), (&#39;chikio&#39;, 1.0), (&#39;forbes&#39;, 1.0)] . . Visualizing The Result . I will use the matplotlib library to plot a simple distribution of the keywords with their relevance . import matplotlib.pyplot as plt def plot(pair_list): k, v = zip(*pair_list) plt.bar(range(len(k)), v) plt.xticks(range(len(k)), k, rotation=&#39;vertical&#39;) plt.show() plot(res) . There is much more better way to visualize this result and that is by using a word cloud . Word cloud . A word cloud object basically takes in text or pre computed list of words with their frequencies and returns an image which can be displayed using matplotlib . from wordcloud import WordCloud import matplotlib.pyplot as plt wc = WordCloud(background_color=&#39;white&#39;, width=800, height=600) plt.figure(figsize=(15,7)) plt.imshow(wc.generate_from_frequencies({k:v for k, v in res})) . &lt;matplotlib.image.AxesImage at 0x7f5e939ddb10&gt; . Passing the orignal text to the word cloud gives the results below . plt.figure(figsize=(15, 7)) plt.imshow(wc.generate(text)) . &lt;matplotlib.image.AxesImage at 0x7f5e9346fe50&gt; . Conclusion . In this basic demonstration, I have gone through the process of extracting meaning from a wikepedia text, in the form of keywords and word cloud. . I equally demonstrated typical steps in which a data scientist will take when working with data, starting from data collection up to visualization .",
            "url": "https://alphonsebrandon.github.io/AB/data%20visualization/word%20cloud/data%20mining/nlp/python/2022/05/19/_04_23_Word_Cloud.html",
            "relUrl": "/data%20visualization/word%20cloud/data%20mining/nlp/python/2022/05/19/_04_23_Word_Cloud.html",
            "date": " • May 19, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Welcome to my portfolio! . Alphonse Brandon is a data scientist with an urge to make an impact through innovative ideas and implementation. . In the effort of bringing the gap between theory and practice among his peers in the university, he has organized several tech-skill acquisition events at his university and internationally through school clubs an organization . His dream is to see a more prosperous and empowered Africa, especially in terms of technology . He beliefs he is unstable and anything is possible and achievable . Alphonse is a christian with strong reverence for God and fellowships in his local church. He enjoys playing basketball and he is a fan of Manchester City FC, a football club in the English premier league. .",
          "url": "https://alphonsebrandon.github.io/AB/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "contact",
          "content": "You can contact me through the following channels . Email: . alphonse.brand@gmail.com . Phone &amp; Whatsapp . (+237) 678 139 861 . Linkedin . Click Linkedin profile . Github . Click Github Profile . Twitter . Click Twitter profile .",
          "url": "https://alphonsebrandon.github.io/AB/contact/",
          "relUrl": "/contact/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://alphonsebrandon.github.io/AB/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}